/*
 * Copyright (C) 2014 Leo
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package tw.edu.sju.ee.eea.module.iepe.project.properties;

import javax.swing.JComponent;
import org.netbeans.spi.project.ui.support.ProjectCustomizer;
import org.openide.util.Lookup;
import org.openide.util.NbBundle;
import tw.edu.sju.ee.eea.module.iepe.project.IepeProject;
import tw.edu.sju.ee.eea.module.iepe.project.IepeProjectProperties;

/**
 *
 * @author Leo
 */
public class IepeDeviceProperties extends javax.swing.JPanel implements ProjectCustomizer.CompositeCategoryProvider {

    private static final String DEVICE = "Device";
    private IepeProjectProperties properties;

    @ProjectCustomizer.CompositeCategoryProvider.Registration(projectType = "edu-sju-iepe", position = 100)
    public static IepeDeviceProperties createGeneral() {
        return new IepeDeviceProperties();
    }

    @NbBundle.Messages("LBL_Config_Device=Device")
    @Override
    public ProjectCustomizer.Category createCategory(Lookup lkp) {
        properties = lkp.lookup(IepeProject.class).getProperties();
        initText();
        return ProjectCustomizer.Category.create(DEVICE, Bundle.LBL_Config_Device(), null);
    }

    @Override
    public JComponent createComponent(ProjectCustomizer.Category category, Lookup lkp) {
        return this;
    }

    /**
     * Creates new form IepeGeneralProperties
     */
    public IepeDeviceProperties() {
        initComponents();
    }

    private void initText() {
        nameTextField.setText(properties.device().getDeviceName());
        sampleRateTextField.setText(String.valueOf(properties.device().getSampleRate()));
        channelsTextField.setText(String.valueOf(properties.device().getChannels()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        sampleRateLabel = new javax.swing.JLabel();
        sampleRateTextField = new javax.swing.JTextField();
        channelsLabel = new javax.swing.JLabel();
        channelsTextField = new javax.swing.JTextField();

        org.openide.awt.Mnemonics.setLocalizedText(nameLabel, org.openide.util.NbBundle.getMessage(IepeDeviceProperties.class, "IepeDeviceProperties.nameLabel.text")); // NOI18N

        nameTextField.setPreferredSize(new java.awt.Dimension(101, 21));
        nameTextField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                nameTextFieldCaretUpdate(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(sampleRateLabel, org.openide.util.NbBundle.getMessage(IepeDeviceProperties.class, "IepeDeviceProperties.sampleRateLabel.text")); // NOI18N

        sampleRateTextField.setPreferredSize(new java.awt.Dimension(101, 21));
        sampleRateTextField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                sampleRateTextFieldCaretUpdate(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(channelsLabel, org.openide.util.NbBundle.getMessage(IepeDeviceProperties.class, "IepeDeviceProperties.channelsLabel.text")); // NOI18N

        channelsTextField.setText(org.openide.util.NbBundle.getMessage(IepeDeviceProperties.class, "IepeDeviceProperties.channelsTextField.text")); // NOI18N
        channelsTextField.setPreferredSize(new java.awt.Dimension(101, 21));
        channelsTextField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                channelsTextFieldCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLabel)
                    .addComponent(sampleRateLabel)
                    .addComponent(channelsLabel))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sampleRateTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(channelsTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sampleRateLabel)
                    .addComponent(sampleRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(channelsLabel)
                    .addComponent(channelsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(362, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nameTextFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_nameTextFieldCaretUpdate
        properties.device().setDeviceName(nameTextField.getText());
    }//GEN-LAST:event_nameTextFieldCaretUpdate

    private void sampleRateTextFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_sampleRateTextFieldCaretUpdate
        try {
            properties.device().setSampleRate(Integer.parseInt(sampleRateTextField.getText()));
        } catch (NumberFormatException ex) {
        }
    }//GEN-LAST:event_sampleRateTextFieldCaretUpdate

    private void channelsTextFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_channelsTextFieldCaretUpdate
        try {
            properties.device().setChannels(Integer.parseInt(channelsTextField.getText()));
        } catch (NumberFormatException ex) {
        }
    }//GEN-LAST:event_channelsTextFieldCaretUpdate


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel channelsLabel;
    private javax.swing.JTextField channelsTextField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel sampleRateLabel;
    private javax.swing.JTextField sampleRateTextField;
    // End of variables declaration//GEN-END:variables
}
